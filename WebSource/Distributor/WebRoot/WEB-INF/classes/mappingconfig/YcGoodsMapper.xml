<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="com.yc.Dao.IYcGoodsDao"> 
	<resultMap id="BaseResultMap" type="com.yc.Entity.YcGoods"></resultMap>   
	<sql id="Base_Column_List"> 
		id,wayBillNo,goodsNum,goodsName,inStorageStatus,outStorageStatus,goodsBrand,park,goodsType,vender,weight,volume,elseExplan,createTime,createUser,updateTime,updateUser,remark
	</sql> 
	<select id="getSingleInfo" resultMap="BaseResultMap" parameterType="com.yc.Entity.YcGoods" > 
		select  <include refid="Base_Column_List" />  from yc_goods where id=#{id} 
	</select> 
	<select id="getSumCount" resultType="int" parameterType="com.yc.Entity.YcGoods" > 
		select  count(1)  from yc_goods 
	</select> 
	<select id="getListPagerInfo" resultMap="BaseResultMap" parameterType="map"> 
		select <include refid="Base_Column_List" /> from yc_goods 
		where wayBillNo=#{wayBillNo}
		order by id desc limit #{limitMax} offset #{limitMin} 
	</select> 
	<select id="getGoodsByWayNo" resultMap="BaseResultMap" parameterType="map"> 
		select <include refid="Base_Column_List" /> from yc_goods where wayBillNo=#{wayBillNo} order by id desc 
	</select> 
	<select id="getGoodsByDeliveryNo" resultMap="BaseResultMap" parameterType="string"> 
		SELECT <include refid="Base_Column_List" /> FROM yc_goods yg WHERE  id IN (SELECT yog.zoneGoodsId FROM yc_order_goods yog WHERE yog.deliveryNo=#{dNo})
	</select> 
	<select id="getGoodsByDealerId" resultMap="BaseResultMap" parameterType="string"> 
		SELECT <include refid="Base_Column_List" /> FROM yc_goods yg WHERE yg.wayBillNo IN (SELECT ysd.wayBillNo FROM yc_zone_goods ysd WHERE 1=1
		<if test="param3 !=null"> 
			and yg.outStorageStatus=#{param3} 
		</if>
		and yg.inStorageStatus=0 
		and  ysd.branchNo=#{param2}
	 	and ysd.dealerId=#{param1})
		<if test="param4 !=null"> 
			or FIND_IN_SET(yg.id,#{param4})
		</if>
	</select> 
	<select id="getPageGoodsByDealerId" resultMap="BaseResultMap" parameterType="map"> 
		SELECT <include refid="Base_Column_List" /> FROM yc_goods yg WHERE yg.wayBillNo IN (SELECT DISTINCT(ysd.wayBillNo) FROM yc_zone_goods ysd WHERE yg.inStorageStatus=0 and yg.outStorageStatus=0 AND ysd.dealerId=#{dealerId} ) 
		order by id desc 
		limit #{limitMax} offset #{limitMin}
	</select> 
	<select id="getGoodsInfoByStowageNo" resultMap="BaseResultMap" parameterType="string"> 
	SELECT * FROM yc_goods WHERE id IN (SELECT zoneGoodsId FROM yc_order_goods yog WHERE yog.deliveryNo IN (SELECT ysd.deliverNo FROM  yc_stowage_delivery ysd WHERE stowageNo=#{param1}))
	</select>
	<select id="getGoodsInfoByWayBillNo" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" /> FROM yc_goods yg where yg.wayBillNo=#{param1}
	</select> 
	<delete id="delSingleInfo" parameterType="com.yc.Entity.YcGoods"> 
		delete from yc_goods where id=#{id} 
	</delete> 
	<insert id="addSingleInfo" parameterType="com.yc.Entity.YcGoods" useGeneratedKeys="true" keyProperty="id"> 
		insert into yc_goods  
		(goodsName,wayBillNo,goodsNum,inStorageStatus,outStorageStatus,goodsBrand,park,goodsType,vender,weight,volume,elseExplan,createTime,createUser,updateTime,updateUser,remark) 
		values ( #{goodsName},#{wayBillNo},#{goodsNum},#{goodsBrand},#{park},#{goodsType},#{vender},#{weight},#{volume},#{elseExplan},#{createTime},#{createUser},#{updateTime},#{updateUser},#{remark} )
	</insert> 
	<update id="modSingleInfo" parameterType="com.yc.Entity.YcGoods">   
	update yc_goods 
	<set> 
		<if test="goodsName !=null"> 
			goodsName=#{goodsName},
		</if>
		<if test="goodsBrand !=null"> 
			goodsBrand=#{goodsBrand},
		</if>
		<if test="wayBillNo !=null"> 
			wayBillNo=#{wayBillNo},
		</if>
		<if test="inStorageStatus !=null"> 
			inStorageStatus=#{inStorageStatus},
		</if>
		<if test="outStorageStatus !=null"> 
			outStorageStatus=#{outStorageStatus},
		</if>
		<if test="goodsNum !=null"> 
			goodsNum=#{goodsNum},
		</if>
		<if test="park !=null"> 
			park=#{park},
		</if>
		<if test="goodsType !=null"> 
			goodsType=#{goodsType},
		</if>
		<if test="vender !=null"> 
			vender=#{vender},
		</if>
		<if test="weight !=null"> 
			weight=#{weight},
		</if>
		<if test="volume !=null"> 
			volume=#{volume},
		</if>
		<if test="elseExplan !=null"> 
			elseExplan=#{elseExplan},
		</if>
		<if test="createTime !=null"> 
			createTime=#{createTime},
		</if>
		<if test="createUser !=null"> 
			createUser=#{createUser},
		</if>
		<if test="updateTime !=null"> 
			updateTime=#{updateTime},
		</if>
		<if test="updateUser !=null"> 
			updateUser=#{updateUser},
		</if>
		<if test="remark !=null"> 
			remark=#{remark}
		</if>
	</set> 
	where id=#{id} 
	</update> 
	
</mapper> 

