<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.brightsoft.dao.platform.PlatformOrderEvaluationReplyMapper" >
  <resultMap id="BaseResultMap" type="com.brightsoft.model.PlatformOrderEvaluationReply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="evaluate_id" property="evaluateId" jdbcType="BIGINT" />
    <result column="reply_content" property="replyContent" jdbcType="VARCHAR" />
    <result column="reply_time" property="replyTime" jdbcType="TIMESTAMP" />
    <result column="reply_people" property="replyPeople" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, evaluate_id, reply_content, reply_time, reply_people, state
  </sql>
  <insert id="insert" parameterType="com.brightsoft.model.PlatformOrderEvaluationReply" >
    insert into lc_platform_order_evaluation_reply (id, evaluate_id, reply_content, 
      reply_time, reply_people, state
      )
    values (#{id,jdbcType=BIGINT}, #{evaluateId,jdbcType=BIGINT}, #{replyContent,jdbcType=VARCHAR}, 
      #{replyTime,jdbcType=DATE}, #{replyPeople,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <!-- 查看评价回复 -->
  <select id="selectEvaluationReply" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lc_platform_order_evaluation_reply
    where evaluate_id = #{id,jdbcType=BIGINT}
  </select>
  <!-- <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lc_platform_order_evaluation_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lc_platform_order_evaluation_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insertSelective" parameterType="com.brightsoft.model.PlatformOrderEvaluationReply" >
    insert into lc_platform_order_evaluation_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="evaluateId != null" >
        evaluate_id,
      </if>
      <if test="replyContent != null" >
        reply_content,
      </if>
      <if test="replyTime != null" >
        reply_time,
      </if>
      <if test="replyPeople != null" >
        reply_people,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="evaluateId != null" >
        #{evaluateId,jdbcType=BIGINT},
      </if>
      <if test="replyContent != null" >
        #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyPeople != null" >
        #{replyPeople,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.brightsoft.model.PlatformOrderEvaluationReply" >
    update lc_platform_order_evaluation_reply
    <set >
      <if test="evaluateId != null" >
        evaluate_id = #{evaluateId,jdbcType=BIGINT},
      </if>
      <if test="replyContent != null" >
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
      <if test="replyTime != null" >
        reply_time = #{replyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyPeople != null" >
        reply_people = #{replyPeople,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.brightsoft.model.PlatformOrderEvaluationReply" >
    update lc_platform_order_evaluation_reply
    set evaluate_id = #{evaluateId,jdbcType=BIGINT},
      reply_content = #{replyContent,jdbcType=VARCHAR},
      reply_time = #{replyTime,jdbcType=TIMESTAMP},
      reply_people = #{replyPeople,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update> -->
</mapper>