<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.brightsoft.dao.tms.payMoneyRecordMapper" >
  <resultMap id="BaseResultMap" type="com.brightsoft.model.payMoneyRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="way_bill_number" property="wayBillNumber" jdbcType="VARCHAR" />
    <result column="cost_type" property="costType" jdbcType="INTEGER" />
    <result column="receive_company" property="receiveCompany" jdbcType="VARCHAR" />
    <result column="receive_person" property="receivePerson" jdbcType="VARCHAR" />
    <result column="should_pay_money" property="shouldPayMoney" jdbcType="DOUBLE" />
    <result column="actual_pay_money" property="actualPayMoney" jdbcType="DOUBLE" />
    <result column="is_completed" property="isCompleted" jdbcType="INTEGER" />
    <result column="outlets_id" property="outletsId" jdbcType="BIGINT" />
    <result column="operate_person" property="operatePerson" jdbcType="BIGINT" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, way_bill_number, cost_type, receive_company, receive_person, should_pay_money, 
    actual_pay_money, is_completed, outlets_id, operate_person, operate_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tms_pay_money_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tms_pay_money_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.brightsoft.model.payMoneyRecord" >
    insert into tms_pay_money_record (id, way_bill_number, cost_type, 
      receive_company, receive_person, should_pay_money, 
      actual_pay_money, is_completed, outlets_id, 
      operate_person, operate_time)
    values (#{id,jdbcType=BIGINT}, #{wayBillNumber,jdbcType=VARCHAR}, #{costType,jdbcType=INTEGER}, 
      #{receiveCompany,jdbcType=VARCHAR}, #{receivePerson,jdbcType=VARCHAR}, #{shouldPayMoney,jdbcType=DOUBLE}, 
      #{actualPayMoney,jdbcType=DOUBLE}, #{isCompleted,jdbcType=INTEGER}, #{outletsId,jdbcType=BIGINT}, 
      #{operatePerson,jdbcType=BIGINT}, #{operateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.brightsoft.model.payMoneyRecord" >
    insert into tms_pay_money_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="wayBillNumber != null" >
        way_bill_number,
      </if>
      <if test="costType != null" >
        cost_type,
      </if>
      <if test="receiveCompany != null" >
        receive_company,
      </if>
      <if test="receivePerson != null" >
        receive_person,
      </if>
      <if test="shouldPayMoney != null" >
        should_pay_money,
      </if>
      <if test="actualPayMoney != null" >
        actual_pay_money,
      </if>
      <if test="isCompleted != null" >
        is_completed,
      </if>
      <if test="outletsId != null" >
        outlets_id,
      </if>
      <if test="operatePerson != null" >
        operate_person,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="wayBillNumber != null" >
        #{wayBillNumber,jdbcType=VARCHAR},
      </if>
      <if test="costType != null" >
        #{costType,jdbcType=INTEGER},
      </if>
      <if test="receiveCompany != null" >
        #{receiveCompany,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null" >
        #{receivePerson,jdbcType=VARCHAR},
      </if>
      <if test="shouldPayMoney != null" >
        #{shouldPayMoney,jdbcType=DOUBLE},
      </if>
      <if test="actualPayMoney != null" >
        #{actualPayMoney,jdbcType=DOUBLE},
      </if>
      <if test="isCompleted != null" >
        #{isCompleted,jdbcType=INTEGER},
      </if>
      <if test="outletsId != null" >
        #{outletsId,jdbcType=BIGINT},
      </if>
      <if test="operatePerson != null" >
        #{operatePerson,jdbcType=BIGINT},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.brightsoft.model.payMoneyRecord" >
    update tms_pay_money_record
    <set >
      <if test="wayBillNumber != null" >
        way_bill_number = #{wayBillNumber,jdbcType=VARCHAR},
      </if>
      <if test="costType != null" >
        cost_type = #{costType,jdbcType=INTEGER},
      </if>
      <if test="receiveCompany != null" >
        receive_company = #{receiveCompany,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null" >
        receive_person = #{receivePerson,jdbcType=VARCHAR},
      </if>
      <if test="shouldPayMoney != null" >
        should_pay_money = #{shouldPayMoney,jdbcType=DOUBLE},
      </if>
      <if test="actualPayMoney != null" >
        actual_pay_money = #{actualPayMoney,jdbcType=DOUBLE},
      </if>
      <if test="isCompleted != null" >
        is_completed = #{isCompleted,jdbcType=INTEGER},
      </if>
      <if test="outletsId != null" >
        outlets_id = #{outletsId,jdbcType=BIGINT},
      </if>
      <if test="operatePerson != null" >
        operate_person = #{operatePerson,jdbcType=BIGINT},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.brightsoft.model.payMoneyRecord" >
    update tms_pay_money_record
    set way_bill_number = #{wayBillNumber,jdbcType=VARCHAR},
      cost_type = #{costType,jdbcType=INTEGER},
      receive_company = #{receiveCompany,jdbcType=VARCHAR},
      receive_person = #{receivePerson,jdbcType=VARCHAR},
      should_pay_money = #{shouldPayMoney,jdbcType=DOUBLE},
      actual_pay_money = #{actualPayMoney,jdbcType=DOUBLE},
      is_completed = #{isCompleted,jdbcType=INTEGER},
      outlets_id = #{outletsId,jdbcType=BIGINT},
      operate_person = #{operatePerson,jdbcType=BIGINT},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>