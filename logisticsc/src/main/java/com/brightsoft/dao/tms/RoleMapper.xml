<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.brightsoft.dao.tms.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.brightsoft.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="create_person_id" property="createPersonId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="role_status" property="roleStatus"/>
    <result column="owner_type" property="ownerType"/>
    <result column="platform_type" property="platformType"/>
    <collection property="menus" ofType="com.brightsoft.model.Menu">
    	<id column="menu_id" property="id" jdbcType="BIGINT" />
	    <result column="menu_name" property="menuName"/>
	    <result column="menu_url" property="menuUrl"/>
	    <collection property="subMenus" ofType="com.brightsoft.model.Menu">
	    	<id column="sub_menu_id" property="id" jdbcType="BIGINT" />
	    	<result column="sub_menu_name" property="menuName"/>
	    	<result column="sub_menu_url" property="menuUrl"/>
	    </collection>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, role_desc,create_person_id,create_time,role_status,owner_type,platform_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tms_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tms_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.brightsoft.model.Role" 
  		useGeneratedKeys="true" keyProperty="id">
   <!--  insert into tms_role (id, role_name, role_desc,create_person_id,create_time,role_status)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR},
    		#{createPersonId,jdbcType=BIGINT}, #{createTime,jdbcType=DATETIME}, #{roleStatus,jdbcType=INTEGER}) -->
    	insert into tms_role(role_name,role_desc,create_person_id,create_time,role_status,owner_type,platform_type)
    	values(#{roleName},#{roleDesc},#{createPersonId},#{createTime},#{roleStatus},#{ownerType},#{platformType})
  </insert>
  <insert id="insertSelective" parameterType="com.brightsoft.model.Role" >
    insert into tms_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="createPersonId != null" >
        create_person_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="roleStatus != null" >
        role_status,
      </if>
      <if test="ownerType != null" >
        owner_type,
      </if>
      <if test="platformType != null" >
        platform_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createPersonId != null" >
        #{createPersonId,jdbcType=BIGINT),
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATETIME),
      </if>
      <if test="roleStatus != null" >
        #{roleStatus,jdbcType=BIGINT),
      </if>
      <if test="ownerType != null" >
        #{ownerType,jdbcType=INTEGER},
      </if>
      <if test="platform != null" >
        #{platformType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.brightsoft.model.Role" >
    update tms_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createPersonId != null" >
        create_person_id = #{createPersonId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATETIME},
      </if>
      <if test="roleStatus != null" >
        role_status = #{roleStatus,jdbcType=BIGINT},
      </if>
      <if test="ownerType != null" >
        owner_type = #{ownerType,jdbcType=INTEGER},
      </if>
      <if test="platformType != null" >
        platform_type = #{platformType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.brightsoft.model.Role" >
    update tms_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR}
      <!-- create_person_id = #{createPersonId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=DATETIME} 
      role_status = #{roleStatus,jdbcType=BIGINT}-->
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 获取总记录数 -->
  <select id="countRows" resultType="int">
  	select
  		count(1)
  	from 
  		tms_role r
  	where
  		create_person_id = #{userId}
  		<if test="condition!=null and condition!=''">
  			and role_name = #{condition}
  		</if>
  </select>
  
  <!-- 通过用户id查询角色信息 -->
  <select id="selectByCondition" resultMap="BaseResultMap">
  	select
		r.*,m.id as menu_id,m.menu_name,sm.id as sub_menu_id,sm.menu_name as sub_menu_name
  	from 
  		(select * from tms_role r where create_person_id = #{userId} LIMIT #{page.start},#{page.limit})r
  		left join tms_role_menu rm on r.id = rm.role_id
  		left join tms_menu sm on sm.id = rm.menu_id
		left join tms_menu m on sm.parent_id = m.id
  	<where>
  		<if test="condition!=null and condition!=''">
  			role_name = #{condition}
  		</if>
  	</where> 
  </select>
  
  <!-- 批量添加 -->
  <insert id="insertBatch" parameterType="list" useGeneratedKeys="true"
  		keyProperty="id">
  	insert into tms_role
  		(role_name,role_desc)
  	values
  		<foreach collection="list" item="role" separator=",">
  			(#{roleName},#{roleDesc})
  		</foreach>
  </insert>

  <!-- 批量删除 -->
  <delete id="deleteBatch">
  	delete from
		tms_role 
	where
		id in
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id}
		</foreach>	
  </delete>
  <!-- 通过用户名获取角色权限信息 -->
  <select id="selectByLoginName" parameterType="string" resultMap="BaseResultMap">
  	select
  		r.*,m.id as menu_id,m.menu_name,m.menu_url,sm.id as sub_menu_id,
  		sm.menu_name as sub_menu_name,sm.menu_url as sub_menu_url
  	from 
  		tms_role r 
  		left join tms_user_role ur on ur.role_id = r.id
  		right join tms_user u on ur.user_id = u.id
  		left join tms_role_menu rm on r.id = rm.role_id
  		left join tms_menu sm on sm.id = rm.menu_id
		join tms_menu m on sm.parent_id = m.id
  	where
  		u.login_name = #{loginName} and u.status != 0
  </select>
  
  <!-- 改：通过创建人id 获取角色信息 -->
  <select id="selectByCreatePersonId" parameterType="long" resultMap="BaseResultMap">
  	select
  		*
  	from
  		tms_role
  	where 
  		create_person_id = #{createPersonId}
  </select>
  <!-- 根据角色类型获取角色 -->
  <select id="selectByOwnerType" resultMap="BaseResultMap">
  	select
  		*
  	from
  		tms_role
  	where 
  		owner_type = #{ownerType}
  </select>
  <!-- 获取用户角色 -->
  <select id="selectByUserId" resultMap="BaseResultMap">
  	SELECT
  	*
  	FROM
  	tms_role r
  	RIGHT JOIN tms_user_role ur on ur.role_id = r.id
  	WHERE ur.user_id = #{userId}
  </select>
  <select id="selectByPlatformType" resultMap="BaseResultMap">
  	SELECT
  	*
  	FROM
  	tms_role
  	WHERE platform_type = #{platformType}
  	ORDER BY id asc
  </select>
  <select id="selectByCmpIdAndOwnerType" resultMap="BaseResultMap">
  	SELECT 
  	r.*
  	FROM tms_role r
  	LEFT JOIN tms_user_role ur on ur.role_id = r.id
  	LEFT JOIN tms_user u on ur.user_id = u.id 
  	WHERE u.company_id = #{companyId} and r.owner_type = #{ownerType}
  </select>
</mapper>