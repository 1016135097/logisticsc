<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.brightsoft.dao.tms.TakeCashApplyMapper" >
  <resultMap id="BaseResultMap" type="com.brightsoft.model.TakeCashApply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="audit_person" property="auditPerson" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, money, status, apply_time, audit_time, audit_person
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from lc_take_cash_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from lc_take_cash_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.brightsoft.model.TakeCashApply" >
    insert into lc_take_cash_apply (id, user_id, money, 
      status, apply_time, audit_time, 
      audit_person)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{money,jdbcType=DOUBLE}, 
      #{status,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditPerson,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.brightsoft.model.TakeCashApply" >
    insert into lc_take_cash_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="auditPerson != null" >
        audit_person,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditPerson != null" >
        #{auditPerson,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.brightsoft.model.TakeCashApply" >
    update lc_take_cash_apply
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditPerson != null" >
        audit_person = #{auditPerson,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.brightsoft.model.TakeCashApply" >
    update lc_take_cash_apply
    set user_id = #{userId,jdbcType=BIGINT},
      money = #{money,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_person = #{auditPerson,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByParams" resultMap="BaseResultMap" >
  	SELECT t1.*, t2.true_name user_name, t2.mobile FROM lc_take_cash_apply t1 
  	LEFT JOIN lc_platform_user t2 ON t1.user_id = t2.id where 1 = 1
  	<if test="status != null and status != '' ">
   		and t1.status = #{status,jdbcType=BIGINT}
   	</if>
  	<if test="startTime != null and startTime != '' ">
   		and t1.apply_time >= #{startTime,jdbcType=TIMESTAMP}
   	</if>
   	<if test="endTime != null and endTime != '' ">
   		and t1.apply_time <![CDATA[<=]]> #{endTime,jdbcType=TIMESTAMP}
   	</if>
   	<if test="condition != null and condition != ''">
   		and ((t2.true_name like concat("%",#{condition,jdbcType=VARCHAR},"%")) or (t2.mobile like concat("%",#{condition,jdbcType=VARCHAR},"%")))
   	</if>
   	limit #{start}, #{limit}
  </select>
  <select id="selectByParamsCount" resultType="int" >
    SELECT count(1) FROM lc_take_cash_apply t1 
  	LEFT JOIN lc_platform_user t2 ON t1.user_id = t2.id where 1 = 1
  	<if test="status != null and status != '' ">
   		and t1.status = #{status,jdbcType=BIGINT}
   	</if>
  	<if test="startTime != null and startTime != '' ">
   		and t1.apply_time >= #{startTime,jdbcType=TIMESTAMP}
   	</if>
   	<if test="endTime != null and endTime != '' ">
   		and t1.apply_time <![CDATA[<=]]> #{endTime,jdbcType=TIMESTAMP}
   	</if>
   	<if test="condition != null and condition != ''">
   		and ((t2.true_name like concat("%",#{condition,jdbcType=VARCHAR},"%")) or (t2.mobile like concat("%",#{condition,jdbcType=VARCHAR},"%")))
   	</if>
  </select>
</mapper>