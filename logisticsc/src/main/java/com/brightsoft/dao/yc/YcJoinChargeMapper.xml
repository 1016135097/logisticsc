<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > 
<mapper namespace="com.brightsoft.dao.yc.IYcJoinChargeDao"> 
	<resultMap id="BaseResultMap" type="com.brightsoft.entity.YcJoinCharge"></resultMap>   
	<sql id="Base_Column_List"> 
		id,chargeNorm,status,createTime,createUser,updateTime,updateUser,remark
	</sql> 
	<select id="getSingleInfo" resultMap="BaseResultMap" parameterType="com.brightsoft.entity.YcJoinCharge" > 
		select  <include refid="Base_Column_List" />  from yc_join_charge where id=#{id} 
	</select> 
	<select id="getSumCount" resultType="int" parameterType="com.brightsoft.entity.YcJoinCharge" > 
		select  count(1)  from yc_join_charge 
	</select> 
	<select id="getListPagerInfo" resultMap="BaseResultMap" parameterType="map"> 
		select <include refid="Base_Column_List" /> from yc_join_charge order by id desc 
		limit #{limitMax} offset #{limitMin} 
	</select> 
	<delete id="delSingleInfo" parameterType="com.brightsoft.entity.YcJoinCharge"> 
		delete from yc_join_charge where id=#{id} 
	</delete>
	<delete id="delSelect" parameterType="com.brightsoft.entity.YcEmployee"> 
		delete from yc_join_charge where id in 
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>  
	<insert id="addSingleInfo" parameterType="com.brightsoft.entity.YcJoinCharge" useGeneratedKeys="true" keyProperty="id"> 
		insert into yc_join_charge  
		(chargeNorm,status,createTime,createUser,updateTime,updateUser,remark) 
		values (#{chargeNorm},#{status},#{createTime},#{createUser},#{updateTime},#{updateUser},#{remark} )
	</insert> 
	<update id="modSingleInfo" parameterType="com.brightsoft.entity.YcJoinCharge">   
	update yc_join_charge 
	<set> 
		<if test="chargeNorm !=null"> 
			chargeNorm=#{chargeNorm},
		</if>
		<if test="status !=null"> 
			status=#{status},
		</if>
		<if test="createTime !=null"> 
			createTime=#{createTime},
		</if>
		<if test="createUser !=null"> 
			createUser=#{createUser},
		</if>
		<if test="updateTime !=null"> 
			updateTime=#{updateTime},
		</if>
		<if test="updateUser !=null"> 
			updateUser=#{updateUser},
		</if>
		<if test="remark !=null"> 
			remark=#{remark}
		</if>
	</set> 
	where id=#{id} 
	</update> 
</mapper> 

